name: phpunit

on: push

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [8.1, 8.2, 8.3, 8.4, 8.5]
    steps:
    - uses: actions/checkout@v4
    - uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        coverage: xdebug
      env:
        fail-fast: true      
    - uses: actions/cache@v4
      with: 
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: composer
      run: composer update
    - name: phpunit
      run: XDEBUG_MODE=coverage vendor/bin/phpunit
    - name: coveralls
      run: |
        export COVERALLS_RUN_LOCALLY=1
        export COVERALLS_REPO_TOKEN=${{ secrets.coverallsToken }}
        composer require php-coveralls/php-coveralls
        php vendor/bin/php-coveralls -v
        git reset --hard HEAD
    - name: document
      run: |
        docker run --rm -v $(pwd):/data phpdoc/phpdoc:3 --directory=src --directory=vendor/sweetrdf/rdf-interface/src --target=docs
        git fetch && git checkout docs --
        for i in `ls -1 | grep -v ^docs$`; do rm -fR $i ; done
        cp -R docs/* .
        git config user.email "workflow@github.actions"
        git config user.name "Github Actions Workflow"
        git add * || true
        git commit -a -m 'Automatic documentation generation' && git push origin docs || true
  phpstan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
    - uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: composer
      run: composer update
    - name: phpstan
      run: vendor/bin/phpstan analyse -l 8 src tests || true

